/* It starts completely empty. I wish you luck. */

#wrapper{
    display:grid;
    grid-template-rows:auto,auto,auto,auto,auto;
    grid-template-areas:
    "logo" 
    "menu" 
    "intro" 
    "playground" 
    "footer";
    margin: 1rem;
}

@media screen and (min-width: 850px){
    #wrapper{
        grid-template-columns: 500px, 1fr;
        grid-template-rows: 345px, auto;
        margin: 2rem;
        grid-template-areas:
    "logo       intro"
    "menu       menu"
    "playground playground"
    "footer     footer";
    }
}
.game{
    width: 500px;
  height: 345px;
  background: url(..//images/tetris-logo.png) no-repeat;
  text-indent: -9999px;
}
section{
    margin:2rem;
}
.menu a {
    display: block;
    background: gray;
    padding: 10px;
    color: white;
    text-decoration: none;
    transition: transform 0.1s ease-in , background-color 0.5s linear;
}
.menu li {
    width: 25%;
}
@media (max-width: 550px) {
	.menu li {
		width: 100%;
	}
}
.menu a:hover {
	background: red;
	color: yellow;
    transform:scale(1.1);
}
h1.game { grid-area: logo; }
ul.menu {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
}
ul.menu ul li {
    width:100%;
}
ul.menu ul {
    display:none;
}
ul.menu li:hover ul {
    display:flex;
}
#introduction { grid-area: intro; }
#tetgrid { grid-area: playground; }
footer { grid-area: footer; }
.menu .submenu li>a {
    background:red;
    color:yellow;
}
.menu .submenu>a:after {
    content: "+";
    padding-left:5px;
}

#tetgrid {
    display: grid;
    grid-template-columns: repeat(6, 100px);
    grid-template-rows: repeat(6, 100px);
}
#o {
    grid-column: 1/3;
    grid-row: 1/span 2;
}
#z img {
    transform-origin: 0 0;
    transform: translateX(205px) rotate(90deg);
}
#z {
    grid-column: 2/span 2;
    grid-row: 2/span 3;
}
#i {
    grid-column: 3/-1;
    grid-row: span 1;
}
#s{
    grid-column: 3/-1;
    grid-row: span 1;
}
#j img {
    transform-origin: 0 0;
    transform:rotate(-90deg);
}
#j{
    grid-column: 2/span 2;
    grid-row: 2 /span 2;
    transform: rotate(90deg);
}
#l{
    grid-column: 1/span 1;
    grid-row: 5/ span 2;
}


#t img{
    transform: rotate(180deg);
}
#t{
    grid-column: 3/span 3;
    grid-row:3 / span 2;
}
img {
    transition-property: transform;
    transition-duration: 2s;
}
img:hover {
    transform: rotate(-90deg) translateZ(50000px);
}